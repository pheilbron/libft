.TH ft_vector 3 "28 July 2019" "version 1.0"
.SH NAME
\fBt_vector\fR -- Create and manipulate vector objects.
.SH LIBRARY
42 C Library (libft, -lft)
.SH SYNOPSIS
.B #include \(dqft_vector.h\(dq
.PP
\fIt_vector *\fR
.br
\fBft_vect_init\fR(\fIint capacity\fR);
.PP
\fIt_vector *\fR
.br
\fBft_vect_new\fR(\fIt_vector *v\fR, \fIint capacity\fR);
.PP
\fIvoid *\fR
.br
\fBft_vect_add\fR(\fIt_vector *v\fR, \fIvoid *data\fR);
.PP
\fIvoid *\fR
.br
\fBft_vect_get\fR(\fIt_vector *v\fR, \fIint index\fR);
.PP
\fIvoid\fR
.br
\fBft_vect_set\fR(\fIt_vector *v\fR, \fIint index\fR, \fIvoid *item\fR);
.PP
\fIvoid\fR
.br
\fBft_vect_del\fR(\fIt_vector *v\fR, \fIint index\fR);
.PP
\fIvoid\fR
.br
\fBft_vect_free\fR(\fIt_vector *v\fR);
.SH DESCRIPTION
A vector is a resizable array. It is defined as:
.br
\fIt_vector\fR {
.br
	\fIvoid **\fR	data;
.br	
	\fIint\fR		cap;
.br	
	\fIint\fR		pos;
.br
}
.br
where \fIdata\fR holds the non-null-terminated array, \fIpos\fR is the index of the first unwritten cell, and \fIcap\fR is the allocated length of \fIbuf\fR.
.PP
The \fBft_vect_init\fR() function initializes a \fIt_vector *\fR with an initial capacity of \fIcapacity\fR.
.PP
The \fBft_vect_new\fR() function initializes a \fIv\fR, an already allocated struct with an initial capacity of \fIcapacity\fR.
.PP
The \fBft_vect_add\fR() function adds \fIdata\fR to index \fIv->pos\fR of \fIv\fR.
.PP
The \fBft_vect_get\fR() function returns the data at \fIindex\fR.
.PP
The \fBft_vect_set\fR() function replaces the data in \fIv\fR at \fIindex\fR with \fIitem\fR.
.PP
The \fBft_vect_del\fR() function removes the data at \fIindex\fR and moves all subsequent data to the left.
.PP
The \fBft_vect_free\fR() function frees the array, \fIdata\fR  and then \fIv\fR.
.PP
.SH RETURN VALUES
The functions \fBft_vect_init\fR() and \fBft_vect_new\fR() return an initialized \fIt_vector *\fR. If any of the memory allocations fail, the functions return \fINULL\fR.
.PP
The functions \fBft_vect_add\fR() and \fBft_vect_get\fR() return the data added and data at \fIindex\fR, respectively, as a \fIvoid *\fR.
.PP
The functions \fBft_vect_set\fR(), \fBft_vect_del\fR() and \fBft_vect_free\fR() do not return a value.
.SH BUGS
No known bugs.
.SH AUTHOR
Written by Phillip Heilbron.
